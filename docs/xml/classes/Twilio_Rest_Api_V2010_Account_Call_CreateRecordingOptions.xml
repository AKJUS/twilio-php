<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions" abstract="false" final="false" start="93" end="203">
  <file path="/twilio/repos/php/src/Twilio/Rest/Api/V2010/Account/Call" file="RecordingOptions.php" realpath="/twilio/repos/php/src/Twilio/Rest/Api/V2010/Account/Call/RecordingOptions.php" size="18475" time="2024-10-28T12:06:42+00:00" unixtime="1730117202" sha1="1875430b7ea75f0d3409ab9ccd03818f19d6b417" relative="Twilio/Rest/Api/V2010/Account/Call/RecordingOptions.php"/>
  <extends full="Twilio\Options" namespace="Twilio" name="Options"/>
  <constructor name="__construct" start="103" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space." type="array" variable="$recordingStatusCallbackEvent" of="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\string" namespace="Twilio\Rest\Api\V2010\Account\Call" name="string"/>
      </param>
      <param description="The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback)." type="string" variable="$recordingStatusCallback"/>
      <param description="The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`." type="string" variable="$recordingStatusCallbackMethod"/>
      <param description="Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not." type="string" variable="$trim"/>
      <param description="The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels." type="string" variable="$recordingChannels"/>
      <param description="The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio." type="string" variable="$recordingTrack"/>
    </docblock>
    <parameter name="recordingStatusCallbackEvent" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
    <parameter name="recordingStatusCallback" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingStatusCallbackMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="trim" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingChannels" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingTrack" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
  </constructor>
  <method name="setRecordingStatusCallbackEvent" start="127" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space."/>
      <param description="The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space." type="array" variable="$recordingStatusCallbackEvent" of="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\string" namespace="Twilio\Rest\Api\V2010\Account\Call" name="string"/>
      </param>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="recordingStatusCallbackEvent" byreference="false" type="array"/>
  </method>
  <method name="setRecordingStatusCallback" start="139" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback)."/>
      <param description="The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback)." type="string" variable="$recordingStatusCallback"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="recordingStatusCallback" byreference="false" type="string"/>
  </method>
  <method name="setRecordingStatusCallbackMethod" start="151" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`."/>
      <param description="The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`." type="string" variable="$recordingStatusCallbackMethod"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="recordingStatusCallbackMethod" byreference="false" type="string"/>
  </method>
  <method name="setTrim" start="163" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not."/>
      <param description="Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not." type="string" variable="$trim"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="trim" byreference="false" type="string"/>
  </method>
  <method name="setRecordingChannels" start="175" end="179" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels."/>
      <param description="The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels." type="string" variable="$recordingChannels"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="recordingChannels" byreference="false" type="string"/>
  </method>
  <method name="setRecordingTrack" start="187" end="191" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio."/>
      <param description="The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio." type="string" variable="$recordingTrack"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\Call\$this" namespace="Twilio\Rest\Api\V2010\Account\Call" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\Call\CreateRecordingOptions" namespace="Twilio\Rest\Api\V2010\Account\Call" name="CreateRecordingOptions"/>
    </return>
    <parameter name="recordingTrack" byreference="false" type="string"/>
  </method>
  <method name="__toString" start="198" end="202" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Provide a friendly representation"/>
      <return description="Machine friendly representation" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <parent full="Twilio\Options" namespace="Twilio" name="Options">
    <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
    <member name="options" default="" type="array" visibility="protected" static="false" line="8"/>
    <method name="getIterator" start="10" end="12" abstract="false" final="false" static="false" visibility="public">
      <return type="object" nullable="false">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
    </method>
  </parent>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
