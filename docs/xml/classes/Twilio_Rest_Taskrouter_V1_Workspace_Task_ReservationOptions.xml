<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Twilio\Rest\Taskrouter\V1\Workspace\Task\ReservationOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="ReservationOptions" abstract="true" final="false" start="21" end="219">
  <file path="/twilio/repos/php/src/Twilio/Rest/Taskrouter/V1/Workspace/Task" file="ReservationOptions.php" realpath="/twilio/repos/php/src/Twilio/Rest/Taskrouter/V1/Workspace/Task/ReservationOptions.php" size="57677" time="2024-10-28T12:06:46+00:00" unixtime="1730117206" sha1="dc80ede953878c8ccd351696b76d038481a6bf0c" relative="Twilio/Rest/Taskrouter/V1/Workspace/Task/ReservationOptions.php"/>
  <method name="read" start="29" end="40" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="Returns the list of reservations for a task with a specified ReservationStatus.  Can be: `pending`, `accepted`, `rejected`, or `timeout`." type="string" variable="$reservationStatus"/>
      <param description="The SID of the reserved Worker resource to read." type="string" variable="$workerSid"/>
      <return description="Options builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\ReadReservationOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="ReadReservationOptions"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\ReadReservationOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="ReadReservationOptions"/>
    </return>
    <parameter name="reservationStatus" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="workerSid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
  </method>
  <method name="update" start="100" end="217" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$reservationStatus"/>
      <param description="The new worker activity SID if rejecting a reservation." type="string" variable="$workerActivitySid"/>
      <param description="The assignment instruction for reservation." type="string" variable="$instruction"/>
      <param description="The SID of the Activity resource to start after executing a Dequeue instruction." type="string" variable="$dequeuePostWorkActivitySid"/>
      <param description="The Caller ID of the call to the worker when executing a Dequeue instruction." type="string" variable="$dequeueFrom"/>
      <param description="Whether to record both legs of a call when executing a Dequeue instruction or which leg to record." type="string" variable="$dequeueRecord"/>
      <param description="Timeout for call when executing a Dequeue instruction." type="int" variable="$dequeueTimeout"/>
      <param description="The Contact URI of the worker when executing a Dequeue instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination." type="string" variable="$dequeueTo"/>
      <param description="The Callback URL for completed call event when executing a Dequeue instruction." type="string" variable="$dequeueStatusCallbackUrl"/>
      <param description="The Caller ID of the outbound call when executing a Call instruction." type="string" variable="$callFrom"/>
      <param description="Whether to record both legs of a call when executing a Call instruction or which leg to record." type="string" variable="$callRecord"/>
      <param description="Timeout for call when executing a Call instruction." type="int" variable="$callTimeout"/>
      <param description="The Contact URI of the worker when executing a Call instruction.  Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination." type="string" variable="$callTo"/>
      <param description="TwiML URI executed on answering the worker's leg as a result of the Call instruction." type="string" variable="$callUrl"/>
      <param description="The URL to call  for the completed call event when executing a Call instruction." type="string" variable="$callStatusCallbackUrl"/>
      <param description="Whether to accept a reservation when executing a Call instruction." type="object" variable="$callAccept">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="The Call SID of the call parked in the queue when executing a Redirect instruction." type="string" variable="$redirectCallSid"/>
      <param description="Whether the reservation should be accepted when executing a Redirect instruction." type="object" variable="$redirectAccept">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="TwiML URI to redirect the call to when executing the Redirect instruction." type="string" variable="$redirectUrl"/>
      <param description="The Contact URI of the worker when executing a Conference instruction. Can be the URI of the Twilio Client, the SIP URI for Programmable SIP, or the [E.164](https://www.twilio.com/docs/glossary/what-e164) formatted phone number, depending on the destination." type="string" variable="$to"/>
      <param description="The Caller ID of the call to the worker when executing a Conference instruction." type="string" variable="$from"/>
      <param description="The URL we should call using the `status_callback_method` to send status information to your application." type="string" variable="$statusCallback"/>
      <param description="The HTTP method we should use to call `status_callback`. Can be: `POST` or `GET` and the default is `POST`." type="string" variable="$statusCallbackMethod"/>
      <param description="The call progress events that we will send to `status_callback`. Can be: `initiated`, `ringing`, `answered`, or `completed`." type="string" variable="$statusCallbackEvent"/>
      <param description="Timeout for call when executing a Conference instruction." type="int" variable="$timeout"/>
      <param description="Whether to record the participant and their conferences, including the time between conferences. The default is `false`." type="object" variable="$record">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="Whether the agent is muted in the conference. The default is `false`." type="object" variable="$muted">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="Whether to play a notification beep when the participant joins or when to play a beep. Can be: `true`, `false`, `onEnter`, or `onExit`. The default value is `true`." type="string" variable="$beep"/>
      <param description="Whether to start the conference when the participant joins, if it has not already started. The default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference." type="object" variable="$startConferenceOnEnter">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="Whether to end the conference when the agent leaves." type="object" variable="$endConferenceOnExit">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="The URL we should call using the `wait_method` for the music to play while participants are waiting for the conference to start. The default value is the URL of our standard hold music. [Learn more about hold music](https://www.twilio.com/labs/twimlets/holdmusic)." type="string" variable="$waitUrl"/>
      <param description="The HTTP method we should use to call `wait_url`. Can be `GET` or `POST` and the default is `POST`. When using a static audio file, this should be `GET` so that we can cache the file." type="string" variable="$waitMethod"/>
      <param description="Whether to allow an agent to hear the state of the outbound call, including ringing or disconnect messages. The default is `true`." type="object" variable="$earlyMedia">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="The maximum number of participants in the conference. Can be a positive integer from `2` to `250`. The default value is `250`." type="int" variable="$maxParticipants"/>
      <param description="The URL we should call using the `conference_status_callback_method` when the conference events in `conference_status_callback_event` occur. Only the value set by the first participant to join the conference is used. Subsequent `conference_status_callback` values are ignored." type="string" variable="$conferenceStatusCallback"/>
      <param description="The HTTP method we should use to call `conference_status_callback`. Can be: `GET` or `POST` and defaults to `POST`." type="string" variable="$conferenceStatusCallbackMethod"/>
      <param description="The conference status events that we will send to `conference_status_callback`. Can be: `start`, `end`, `join`, `leave`, `mute`, `hold`, `speaker`." type="string" variable="$conferenceStatusCallbackEvent"/>
      <param description="Whether to record the conference the participant is joining or when to record the conference. Can be: `true`, `false`, `record-from-start`, and `do-not-record`. The default value is `false`." type="string" variable="$conferenceRecord"/>
      <param description="How to trim the leading and trailing silence from your recorded conference audio files. Can be: `trim-silence` or `do-not-trim` and defaults to `trim-silence`." type="string" variable="$conferenceTrim"/>
      <param description="The recording channels for the final recording. Can be: `mono` or `dual` and the default is `mono`." type="string" variable="$recordingChannels"/>
      <param description="The URL that we should call using the `recording_status_callback_method` when the recording status changes." type="string" variable="$recordingStatusCallback"/>
      <param description="The HTTP method we should use when we call `recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`." type="string" variable="$recordingStatusCallbackMethod"/>
      <param description="The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available." type="string" variable="$conferenceRecordingStatusCallback"/>
      <param description="The HTTP method we should use to call `conference_recording_status_callback`. Can be: `GET` or `POST` and defaults to `POST`." type="string" variable="$conferenceRecordingStatusCallbackMethod"/>
      <param description="The [region](https://support.twilio.com/hc/en-us/articles/223132167-How-global-low-latency-routing-and-region-selection-work-for-conferences-and-Client-calls) where we should mix the recorded audio. Can be:`us1`, `ie1`, `de1`, `sg1`, `br1`, `au1`, or `jp1`." type="string" variable="$region"/>
      <param description="The SIP username used for authentication." type="string" variable="$sipAuthUsername"/>
      <param description="The SIP password for authentication." type="string" variable="$sipAuthPassword"/>
      <param description="The Call progress events sent via webhooks as a result of a Dequeue instruction." type="array" variable="$dequeueStatusCallbackEvent" of="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\string" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="string"/>
      </param>
      <param description="The new worker activity SID after executing a Conference instruction." type="string" variable="$postWorkActivitySid"/>
      <param type="string" variable="$supervisorMode"/>
      <param description="The Supervisor SID/URI when executing the Supervise instruction." type="string" variable="$supervisor"/>
      <param description="Whether to end the conference when the customer leaves." type="object" variable="$endConferenceOnCustomerExit">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="Whether to play a notification beep when the customer joins." type="object" variable="$beepOnCustomerEntrance">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="bool"/>
      </param>
      <param description="The jitter buffer size for conference. Can be: `small`, `medium`, `large`, `off`." type="string" variable="$jitterBufferSize"/>
      <param description="The If-Match HTTP request header" type="string" variable="$ifMatch"/>
      <return description="Options builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\UpdateReservationOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="UpdateReservationOptions"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\Task\UpdateReservationOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace\Task" name="UpdateReservationOptions"/>
    </return>
    <parameter name="reservationStatus" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="workerActivitySid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="instruction" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeuePostWorkActivitySid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeueFrom" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeueRecord" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeueTimeout" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="dequeueTo" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeueStatusCallbackUrl" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callFrom" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callRecord" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callTimeout" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="callTo" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callUrl" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callStatusCallbackUrl" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="callAccept" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="redirectCallSid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="redirectAccept" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="redirectUrl" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="to" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="from" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="statusCallback" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="statusCallbackMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="statusCallbackEvent" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
    <parameter name="timeout" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="record" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="muted" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="beep" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="startConferenceOnEnter" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="endConferenceOnExit" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="waitUrl" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="waitMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="earlyMedia" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="maxParticipants" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="conferenceStatusCallback" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="conferenceStatusCallbackMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="conferenceStatusCallbackEvent" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
    <parameter name="conferenceRecord" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="conferenceTrim" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingChannels" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingStatusCallback" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="recordingStatusCallbackMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="conferenceRecordingStatusCallback" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="conferenceRecordingStatusCallbackMethod" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="region" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="sipAuthUsername" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="sipAuthPassword" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="dequeueStatusCallbackEvent" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
    <parameter name="postWorkActivitySid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="supervisorMode" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="supervisor" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="endConferenceOnCustomerExit" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="beepOnCustomerEntrance" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
    <parameter name="jitterBufferSize" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="ifMatch" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
  </method>
</class>
