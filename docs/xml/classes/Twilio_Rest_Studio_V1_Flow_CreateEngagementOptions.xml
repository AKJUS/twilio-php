<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Twilio\Rest\Studio\V1\Flow\CreateEngagementOptions" namespace="Twilio\Rest\Studio\V1\Flow" name="CreateEngagementOptions" abstract="false" final="false" start="43" end="78">
  <file path="/twilio/repos/php/src/Twilio/Rest/Studio/V1/Flow" file="EngagementOptions.php" realpath="/twilio/repos/php/src/Twilio/Rest/Studio/V1/Flow/EngagementOptions.php" size="3590" time="2024-10-28T12:06:45+00:00" unixtime="1730117205" sha1="308cee8df7ac2d08b4c8b19dba71549a71955aee" relative="Twilio/Rest/Studio/V1/Flow/EngagementOptions.php"/>
  <extends full="Twilio\Options" namespace="Twilio" name="Options"/>
  <constructor name="__construct" start="48" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="A JSON string we will add to your flow's context and that you can access as variables inside your flow. For example, if you pass in `Parameters={'name':'Zeke'}` then inside a widget you can reference the variable `{{flow.data.name}}` which will return the string 'Zeke'. Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string." type="array" variable="$parameters"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
  </constructor>
  <method name="setParameters" start="62" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="A JSON string we will add to your flow's context and that you can access as variables inside your flow. For example, if you pass in `Parameters={'name':'Zeke'}` then inside a widget you can reference the variable `{{flow.data.name}}` which will return the string 'Zeke'. Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string."/>
      <param description="A JSON string we will add to your flow's context and that you can access as variables inside your flow. For example, if you pass in `Parameters={'name':'Zeke'}` then inside a widget you can reference the variable `{{flow.data.name}}` which will return the string 'Zeke'. Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string." type="array" variable="$parameters"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Studio\V1\Flow\$this" namespace="Twilio\Rest\Studio\V1\Flow" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Studio\V1\Flow\CreateEngagementOptions" namespace="Twilio\Rest\Studio\V1\Flow" name="CreateEngagementOptions"/>
    </return>
    <parameter name="parameters" byreference="false" type="array"/>
  </method>
  <method name="__toString" start="73" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Provide a friendly representation"/>
      <return description="Machine friendly representation" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <parent full="Twilio\Options" namespace="Twilio" name="Options">
    <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
    <member name="options" default="" type="array" visibility="protected" static="false" line="8"/>
    <method name="getIterator" start="10" end="12" abstract="false" final="false" static="false" visibility="public">
      <return type="object" nullable="false">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
    </method>
  </parent>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
