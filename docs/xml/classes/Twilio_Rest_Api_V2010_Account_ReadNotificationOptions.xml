<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Twilio\Rest\Api\V2010\Account\ReadNotificationOptions" namespace="Twilio\Rest\Api\V2010\Account" name="ReadNotificationOptions" abstract="false" final="false" start="51" end="131">
  <file path="/twilio/repos/php/src/Twilio/Rest/Api/V2010/Account" file="NotificationOptions.php" realpath="/twilio/repos/php/src/Twilio/Rest/Api/V2010/Account/NotificationOptions.php" size="7019" time="2024-10-28T12:06:42+00:00" unixtime="1730117202" sha1="dbfb38e005ce4ef656ec55f39d31fa902c8805c1" relative="Twilio/Rest/Api/V2010/Account/NotificationOptions.php"/>
  <extends full="Twilio\Options" namespace="Twilio" name="Options"/>
  <constructor name="__construct" start="59" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="Only read notifications of the specified log level. Can be:  `0` to read only ERROR notifications or `1` to read only WARNING notifications. By default, all notifications are read." type="int" variable="$log"/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDateBefore"/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDate"/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDateAfter"/>
    </docblock>
    <parameter name="log" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="messageDateBefore" byreference="false" type="string" default="NULL"/>
    <parameter name="messageDate" byreference="false" type="string" default="NULL"/>
    <parameter name="messageDateAfter" byreference="false" type="string" default="NULL"/>
  </constructor>
  <method name="setLog" start="79" end="83" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Only read notifications of the specified log level. Can be:  `0` to read only ERROR notifications or `1` to read only WARNING notifications. By default, all notifications are read."/>
      <param description="Only read notifications of the specified log level. Can be:  `0` to read only ERROR notifications or `1` to read only WARNING notifications. By default, all notifications are read." type="int" variable="$log"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\$this" namespace="Twilio\Rest\Api\V2010\Account" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\ReadNotificationOptions" namespace="Twilio\Rest\Api\V2010\Account" name="ReadNotificationOptions"/>
    </return>
    <parameter name="log" byreference="false" type="int"/>
  </method>
  <method name="setMessageDateBefore" start="91" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date."/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDateBefore"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\$this" namespace="Twilio\Rest\Api\V2010\Account" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\ReadNotificationOptions" namespace="Twilio\Rest\Api\V2010\Account" name="ReadNotificationOptions"/>
    </return>
    <parameter name="messageDateBefore" byreference="false" type="string"/>
  </method>
  <method name="setMessageDate" start="103" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date."/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDate"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\$this" namespace="Twilio\Rest\Api\V2010\Account" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\ReadNotificationOptions" namespace="Twilio\Rest\Api\V2010\Account" name="ReadNotificationOptions"/>
    </return>
    <parameter name="messageDate" byreference="false" type="string"/>
  </method>
  <method name="setMessageDateAfter" start="115" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date."/>
      <param description="Only show notifications for the specified date, formatted as `YYYY-MM-DD`. You can also specify an inequality, such as `&lt;=YYYY-MM-DD` for messages logged at or before midnight on a date, or `&gt;=YYYY-MM-DD` for messages logged at or after midnight on a date." type="string" variable="$messageDateAfter"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Api\V2010\Account\$this" namespace="Twilio\Rest\Api\V2010\Account" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Api\V2010\Account\ReadNotificationOptions" namespace="Twilio\Rest\Api\V2010\Account" name="ReadNotificationOptions"/>
    </return>
    <parameter name="messageDateAfter" byreference="false" type="string"/>
  </method>
  <method name="__toString" start="126" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Provide a friendly representation"/>
      <return description="Machine friendly representation" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <parent full="Twilio\Options" namespace="Twilio" name="Options">
    <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
    <member name="options" default="" type="array" visibility="protected" static="false" line="8"/>
    <method name="getIterator" start="10" end="12" abstract="false" final="false" static="false" visibility="public">
      <return type="object" nullable="false">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
    </method>
  </parent>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
