<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions" abstract="false" final="false" start="350" end="520">
  <file path="/twilio/repos/php/src/Twilio/Rest/Taskrouter/V1/Workspace" file="TaskOptions.php" realpath="/twilio/repos/php/src/Twilio/Rest/Taskrouter/V1/Workspace/TaskOptions.php" size="37543" time="2024-10-28T12:06:46+00:00" unixtime="1730117206" sha1="9b8f041d1bc582bb37be4b61245bb6ede4185f9c" relative="Twilio/Rest/Taskrouter/V1/Workspace/TaskOptions.php"/>
  <extends full="Twilio\Options" namespace="Twilio" name="Options"/>
  <constructor name="__construct" start="364" end="388" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority." type="int" variable="$priority"/>
      <param description="The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`." type="array" variable="$assignmentStatus" of="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\string" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="string"/>
      </param>
      <param description="The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID." type="string" variable="$workflowSid"/>
      <param description="The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name." type="string" variable="$workflowName"/>
      <param description="The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID." type="string" variable="$taskQueueSid"/>
      <param description="The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name." type="string" variable="$taskQueueName"/>
      <param description="The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter." type="string" variable="$evaluateTaskAttributes"/>
      <param description="A SID of a Worker, Queue, or Workflow to route a Task to" type="string" variable="$routingTarget"/>
      <param description="How to order the returned Task resources. By default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `DateCreated`, `Priority`, or `VirtualStartTime` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Pairings of sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order. The only ordering pairing not allowed is DateCreated and VirtualStartTime." type="string" variable="$ordering"/>
      <param description="Whether to read Tasks with Add-ons. If `true`, returns only Tasks with Add-ons. If `false`, returns only Tasks without Add-ons." type="object" variable="$hasAddons">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="bool"/>
      </param>
    </docblock>
    <parameter name="priority" byreference="false" type="{unknown}" default="" constant="Values::INT_NONE"/>
    <parameter name="assignmentStatus" byreference="false" type="{unknown}" default="" constant="Values::ARRAY_NONE"/>
    <parameter name="workflowSid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="workflowName" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="taskQueueSid" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="taskQueueName" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="evaluateTaskAttributes" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="routingTarget" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="ordering" byreference="false" type="{unknown}" default="" constant="Values::NONE"/>
    <parameter name="hasAddons" byreference="false" type="{unknown}" default="" constant="Values::BOOL_NONE"/>
  </constructor>
  <method name="setPriority" start="396" end="400" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority."/>
      <param description="The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority." type="int" variable="$priority"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="priority" byreference="false" type="int"/>
  </method>
  <method name="setAssignmentStatus" start="408" end="412" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`."/>
      <param description="The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`." type="array" variable="$assignmentStatus" of="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\string" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="string"/>
      </param>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="assignmentStatus" byreference="false" type="array"/>
  </method>
  <method name="setWorkflowSid" start="420" end="424" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID."/>
      <param description="The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID." type="string" variable="$workflowSid"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="workflowSid" byreference="false" type="string"/>
  </method>
  <method name="setWorkflowName" start="432" end="436" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name."/>
      <param description="The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name." type="string" variable="$workflowName"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="workflowName" byreference="false" type="string"/>
  </method>
  <method name="setTaskQueueSid" start="444" end="448" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID."/>
      <param description="The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID." type="string" variable="$taskQueueSid"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="taskQueueSid" byreference="false" type="string"/>
  </method>
  <method name="setTaskQueueName" start="456" end="460" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name."/>
      <param description="The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name." type="string" variable="$taskQueueName"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="taskQueueName" byreference="false" type="string"/>
  </method>
  <method name="setEvaluateTaskAttributes" start="468" end="472" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter."/>
      <param description="The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter." type="string" variable="$evaluateTaskAttributes"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="evaluateTaskAttributes" byreference="false" type="string"/>
  </method>
  <method name="setRoutingTarget" start="480" end="484" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="A SID of a Worker, Queue, or Workflow to route a Task to"/>
      <param description="A SID of a Worker, Queue, or Workflow to route a Task to" type="string" variable="$routingTarget"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="routingTarget" byreference="false" type="string"/>
  </method>
  <method name="setOrdering" start="492" end="496" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="How to order the returned Task resources. By default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `DateCreated`, `Priority`, or `VirtualStartTime` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Pairings of sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order. The only ordering pairing not allowed is DateCreated and VirtualStartTime."/>
      <param description="How to order the returned Task resources. By default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `DateCreated`, `Priority`, or `VirtualStartTime` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Pairings of sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order. The only ordering pairing not allowed is DateCreated and VirtualStartTime." type="string" variable="$ordering"/>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="ordering" byreference="false" type="string"/>
  </method>
  <method name="setHasAddons" start="504" end="508" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Whether to read Tasks with Add-ons. If `true`, returns only Tasks with Add-ons. If `false`, returns only Tasks without Add-ons."/>
      <param description="Whether to read Tasks with Add-ons. If `true`, returns only Tasks with Add-ons. If `false`, returns only Tasks without Add-ons." type="object" variable="$hasAddons">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\bool" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="bool"/>
      </param>
      <return description="Fluent Builder" type="object">
        <type full="Twilio\Rest\Taskrouter\V1\Workspace\$this" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="$this"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Twilio\Rest\Taskrouter\V1\Workspace\ReadTaskOptions" namespace="Twilio\Rest\Taskrouter\V1\Workspace" name="ReadTaskOptions"/>
    </return>
    <parameter name="hasAddons" byreference="false" type="bool"/>
  </method>
  <method name="__toString" start="515" end="519" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Provide a friendly representation"/>
      <return description="Machine friendly representation" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <parent full="Twilio\Options" namespace="Twilio" name="Options">
    <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
    <member name="options" default="" type="array" visibility="protected" static="false" line="8"/>
    <method name="getIterator" start="10" end="12" abstract="false" final="false" static="false" visibility="public">
      <return type="object" nullable="false">
        <type full="Traversable" namespace="" name="Traversable"/>
      </return>
    </method>
  </parent>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
